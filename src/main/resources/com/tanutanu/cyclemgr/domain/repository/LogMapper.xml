<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tanutanu.cyclemgr.domain.repository.LogMapper">

	<resultMap id="logResultMap" type="com.tanutanu.cyclemgr.domain.model.Log">
        <id property="log_id" column="log_id" />
        <result property="task_id" column="task_id" />
        <result property="log_decl" column="log_decl" />
        <result property="log_real" column="log_real" /> 
    </resultMap>

    <select id="findAllLogsByTaskId" parameterType="String" resultMap="logResultMap">
        SELECT
            *
        FROM
            log
        WHERE
            task_id=#{taskId}
    </select>

    <select id="getLogDeclAve" parameterType="string" resultType="_double">
        SELECT
            AVG(log_decl)
        FROM
            log
        WHERE
            task_id=#{taskId}
    </select>

    <select id="getLogRealAve" parameterType="string"  resultType="_double">
        SELECT
            AVG(log_real)
        FROM
            log
        WHERE
            task_id=#{taskId}
    </select>

    <insert id="createLog" parameterType="com.tanutanu.cyclemgr.domain.model.Log">
        INSERT INTO log (log_id, task_id, log_decl, log_real)
        VALUES (
            (SELECT CASE WHEN 'L' ||  MAX(TO_NUMBER(SUBSTRING(log_id,2,255),'999999999'))+1 ISNULL THEN 'L1'
                    ELSE  'L' ||  MAX(TO_NUMBER(SUBSTRING(log_id,2,255),'999999999'))+1 END
                    FROM log),
            #{task_id},
            #{log_decl},
            #{log_real}
        );
    </insert>

    <delete id="deleteAllLogsByTaskId" parameterType="string">
        DELETE FROM log
		WHERE
			task_id=#{taskId}
    </delete>

    <delete id="deleteOverfloatLogsByTaskId" parameterType="string">
        DELETE FROM 
            log
        WHERE
            task_id=#{taskId}
            AND
            log_id NOT IN(
                SELECT
                    log_id
                FROM
                    log
                WHERE
                    task_id=#{taskId}
                ORDER BY TO_NUMBER(SUBSTRING(log_id,2,255),'999999999') DESC LIMIT 100 OFFSET 0
            )
    </delete>
</mapper>